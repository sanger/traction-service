schema {
  query: QueryTypes
  mutation: MutationTypes
}

"""
Autogenerated input type of CreateCovidLibrariesMutation
"""
input CreateCovidLibrariesMutationInput {
  """
  Arguments describing the source for libraries to be created.
  """
  arguments: LibraryCreationArgumentsInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateCovidLibrariesMutation
"""
type CreateCovidLibrariesMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  An array of error messages thrown when creating libraries.
  """
  errors: [String!]!

  """
  An array of tubes containing the generated libraries, or null if errors were thrown.
  """
  tubes: [Tube!]
}

"""
Autogenerated input type of CreatePlateWithCovidSamplesMutation
"""
input CreatePlateWithCovidSamplesMutationInput {
  """
  Arguments describing the plate, wells and samples to create a plate for.
  """
  arguments: PlateWithSamplesInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePlateWithCovidSamplesMutation
"""
type CreatePlateWithCovidSamplesMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  An array of error messages thrown when creating the plate.
  """
  errors: [String!]!

  """
  The generated plate, or nil if errors were thrown.
  """
  plate: Plate
}

type Library {
  """
  The time this object was created.
  """
  createdAt: String!

  """
  The unique database ID of this object.
  """
  id: ID!

  """
  The name of this library.
  """
  name: String!

  """
  The barcode of the plate this library was created from.
  """
  plateBarcode: String!

  """
  An index of the group of wells combined from the plate to form this library.
  """
  pool: Int!

  """
  The number of samples contained in this library.
  """
  poolSize: Int!

  """
  The barcode of the tube this library is contained in.
  """
  tubeBarcode: String

  """
  The time this object was last updated.
  """
  updatedAt: String!
}

input LibraryCreationArgumentsInput {
  """
  The barcode of the plate to create libraries from.
  """
  plateBarcode: String
}

union MaterialUnion = Library | Request

type MutationTypes {
  """
  Create a library from a 96-well plate containing Covid samples.
  """
  createCovidLibraries(input: CreateCovidLibrariesMutationInput!): CreateCovidLibrariesMutationPayload

  """
  Create a plate with a single Covid sample per well.
  """
  createPlateWithCovidSamples(input: CreatePlateWithCovidSamplesMutationInput!): CreatePlateWithCovidSamplesMutationPayload
}

type Plate {
  """
  The barcode of this plate.
  """
  barcode: String!

  """
  The time this object was created.
  """
  createdAt: String!

  """
  The unique database ID of this object.
  """
  id: ID!

  """
  The time this object was last updated.
  """
  updatedAt: String!

  """
  An array of wells that exist on this plate.
  """
  wells: [Well!]!
}

input PlateWithSamplesInput {
  """
  The barcode of the plate.  If not specified, a barcode will be generated.
  """
  barcode: String

  """
  An array of wells on the plate.
  """
  wells: [WellWithSampleInput!]!
}

type QueryTypes {
  """
  Find all Ont Libraries.
  """
  ontLibraries: [Library!]!

  """
  Find all Plates.
  """
  plates: [Plate!]!

  """
  Find a Well by ID.
  """
  well(
    """
    The ID of the Well to find.
    """
    id: ID!
  ): Well

  """
  Find all Wells.
  """
  wells(
    """
    The Plate ID to fetch wells for.
    """
    plateId: ID
  ): [Well!]!
}

type Request {
  """
  The time this object was created.
  """
  createdAt: String!

  """
  The external ID of the sample in this request.
  """
  externalId: String!

  """
  The unique database ID of this object.
  """
  id: ID!

  """
  The name of the sample in this request.
  """
  name: String!

  """
  The time this object was last updated.
  """
  updatedAt: String!
}

input SampleInput {
  """
  The external ID for the sample.
  """
  externalId: String

  """
  The name of the sample.
  """
  name: String

  """
  The oligo sequence used to tag the sample.
  """
  tagOligo: String
}

type Tube {
  """
  The barcode of this tube.
  """
  barcode: String!

  """
  The time this object was created.
  """
  createdAt: String!

  """
  The unique database ID of this object.
  """
  id: ID!

  """
  The material contained in this tube.
  """
  materials: [MaterialUnion!]

  """
  The time this object was last updated.
  """
  updatedAt: String!
}

type Well {
  """
  The time this object was created.
  """
  createdAt: String!

  """
  The unique database ID of this object.
  """
  id: ID!

  """
  The material contained within this well.
  """
  materials: [MaterialUnion!]

  """
  The ID of the plate this well belongs to.
  """
  plateId: ID!

  """
  The description of the position for this well on the plate.
  """
  position: String!

  """
  The time this object was last updated.
  """
  updatedAt: String!
}

input WellWithSampleInput {
  """
  The description of the position of the well.  Typically A1 through to H12.
  """
  position: String

  """
  The sample contained in the well.
  """
  sample: SampleInput
}